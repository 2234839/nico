#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var commander = require('commander');

commander.
  option('-C --config <config>', 'the config file [nico.json]').
  option('-I --source <source>', 'the content directory [content]').
  option('-O --output <output>', 'the output directory [_site]').
  option('--theme <theme>', 'the theme path').
  option('--permalink <permalink>', 'permalink style of your site').
  option('--no-color', 'disable color output').
  option('-v --verbose', 'show more logging').
  option('-q --quiet', 'show less logging');

commander.parse(process.argv);

var nico = require('..');
nico.sdk.log.config(commander);
var file = nico.sdk.file;

var options = {};
var config;
if (commander.config) {
  config = path.resolve(commander.config);
  if (!file.exists(config)) {
    nico.sdk.log.error('config', commander.config + ' file not found');
    process.exit(2);
  }
} else if (file.exists('nico.json')) {
  config = path.resolve('nico.json');
} else if (file.exists('nico.js')) {
  config = path.resolve('nico.js');
}
if (config) {
  options = require(config);
}
['source', 'output', 'permalink', 'theme'].forEach(function(key) {
  if (commander[key]) options[key] = commander[key];
});
nico.build(options);
